import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Date;

public class AutoGenerateDimens {

	private static final int X = 1536;
	private static final int Y = 2048;
	private static final int DPI = 264;

	private static final int DEFAULT_DPI = 160;

	private static final int DEFAULT_X = 768;
	private static final int DEFAULT_Y = 1024;

	private static final String DEFAULT_SAVE_PATH = "D:\\Document\\eclipse_workspace\\JavaTest\\src\\com\\eebbk\\gopay";

	private static final String DIMEN_STR = "<dimen name=\"DIMEN_{*}PX\">{x}dp</dimen>";
 
	public static void main(String[] args) {
//		System.out.println(String.format("%.2f", 1.0 * X / DPI * DEFAULT_DPI / DEFAULT_X * 95));
		//System.out.println(new Date()); 
		//if (args != null && args.length > 0) {
		//	System.out.println("args:" + args[0]);
		//}
		System.out.println("start");
		writePx2DpByDefault();
		//int i = 1;
		//System.out.println(i);
	}

	/**
	 *
	 *
	 */
	private static void writeDimentByDefault(){
		File path = new File(DEFAULT_SAVE_PATH, "values-xxhdpi");
		if (!path.exists()) {
			path.mkdirs();
		}
		File dimensFile = new File(path, "dimens.xml");
		File dimensFileChange = new File(path,"dimen_change.xml");
		String str = null;
		BufferedReader reader = null;
		FileWriter writer = null;
		try {
			reader = new BufferedReader(new FileReader(dimensFile));
			writer = new FileWriter(dimensFileChange);
			while((str = reader.readLine()) != null){
				int startIndex = str.indexOf(">"); 
				int endIndex = str.indexOf("dp");
				if (startIndex != -1 && endIndex != -1) {
					String dp = str.substring(startIndex + 1, endIndex);
					int dpInt = Integer.parseInt(dp);
					str = str.replace(dp, String.format("%.2f", dpInt * 1.0 * Y / DPI * DEFAULT_DPI / DEFAULT_Y));
				}
				writer.write(str + "\n");
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				reader.close();
				writer.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			System.out.println("finish");
		}
	}

	private static void writePx2DpByDefault() {
		File path = new File(DEFAULT_SAVE_PATH, "values-" + Y + "x" + X);
		if (!path.exists()) {
			path.mkdirs();
		}
		File dimensFile = new File(path, "dimens.xml");
		FileWriter fw = null;
		double diff = X * 1.0 / DEFAULT_X;
		double dp2Px = DEFAULT_DPI * 1.0 / DPI;
		try {
			fw = new FileWriter(dimensFile);
			int size = DEFAULT_X > DEFAULT_Y ? DEFAULT_X : DEFAULT_Y;
			fw.write("<resources>");
			for (int i = 1; i < size + 1; i++) {
				fw.write(DIMEN_STR.replace("{*}", i + "").replace("{x}", String.format("%.2f",i * diff * dp2Px)) + "\n");
			}
			fw.write("</resources>");
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			try {
				if (fw != null)
					fw.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
			System.out.println("end");
		}
	}

}
